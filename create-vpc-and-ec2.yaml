AWSTemplateFormatVersion: 2010-09-09
Resources:
# Network setting
  vpc1:
    Type: 'AWS::EC2::VPC'
    Properties:
      CidrBlock: 10.1.0.0/16
      InstanceTenancy: default
      EnableDnsSupport: 'true'
      EnableDnsHostnames: 'false'
      Tags:
        - Key: Name
          Value: ds-common-vpc
  subnet1:
    Type: 'AWS::EC2::Subnet'
    Properties:
      CidrBlock: 10.1.1.0/24
      AvailabilityZone: ap-northeast-1a
      VpcId: !Ref vpc1
      Tags:
        - Key: Name
          Value: ds-common-frontend-public-1a-subnet
  igw1:
    Type: 'AWS::EC2::InternetGateway'
    Properties:
      Tags:
        - Key: Name
          Value: ds-common-igw
  dopt1:
    Type: 'AWS::EC2::DHCPOptions'
    Properties:
      Tags:
        - Key: Name
          Value: ds-common-dopt
      DomainName: ap-northeast-1.compute.internal
      DomainNameServers:
        - AmazonProvidedDNS
  nacl1:
    Type: 'AWS::EC2::NetworkAcl'
    Properties:
      VpcId: !Ref vpc1
  rt1:
    Type: 'AWS::EC2::RouteTable'
    Properties:
      VpcId: !Ref vpc1
      Tags:
        - Key: Name
          Value: ds-common-rt
  acl1:
    Type: 'AWS::EC2::NetworkAclEntry'
    Properties:
      CidrBlock: 0.0.0.0/0
      Egress: 'true'
      Protocol: '-1'
      RuleAction: allow
      RuleNumber: '100'
      NetworkAclId: !Ref nacl1
  acl2:
    Type: 'AWS::EC2::NetworkAclEntry'
    Properties:
      CidrBlock: 0.0.0.0/0
      Protocol: '-1'
      RuleAction: allow
      RuleNumber: '100'
      NetworkAclId: !Ref nacl1
  subnetacl1:
    Type: 'AWS::EC2::SubnetNetworkAclAssociation'
    Properties:
      NetworkAclId: !Ref nacl1
      SubnetId: !Ref subnet1
  gw1:
    Type: 'AWS::EC2::VPCGatewayAttachment'
    Properties:
      VpcId: !Ref vpc1
      InternetGatewayId: !Ref igw1
  route1:
    Type: 'AWS::EC2::Route'
    Properties:
      DestinationCidrBlock: 0.0.0.0/0
      RouteTableId: !Ref rt1
      GatewayId: !Ref igw1
    DependsOn: gw1
  dchpassoc1:
    Type: 'AWS::EC2::VPCDHCPOptionsAssociation'
    Properties:
      VpcId: !Ref vpc1
      DhcpOptionsId: !Ref dopt1
  mySubnetRouteTableAssociation:
    Type: 'AWS::EC2::SubnetRouteTableAssociation'
    Properties:
      SubnetId: !Ref subnet1
      RouteTableId: !Ref rt1
# EC2 setting 
  EC2:
    Type: 'AWS::EC2::Instance'
    Properties:
      DisableApiTermination: 'false'
      InstanceInitiatedShutdownBehavior: stop
      ImageId: ami-00f9d04b3b3092052
      InstanceType: t2.micro
      KeyName: ds-common-20181115-keypair
      Monitoring: 'false'
      Tags:
        - Key: Name
          Value: ds-common-bastion01-ec2
      NetworkInterfaces:
        - DeleteOnTermination: 'true'
          Description: Primary network interface
          DeviceIndex: 0
          SubnetId: !Ref subnet1
          PrivateIpAddresses:
            - PrivateIpAddress: 10.1.1.45
              Primary: 'true'
          GroupSet:
            - !Ref sg1
          AssociatePublicIpAddress: 'true'
  sg1:
    Type: 'AWS::EC2::SecurityGroup'
    Properties:
      GroupDescription: 'ds-common-ec2-bastion01-sg created 2018-11-15T15:18:31.279+09:00'
      VpcId: !Ref vpc1
  ingress1:
    Type: 'AWS::EC2::SecurityGroupIngress'
    Properties:
      GroupId: !Ref sg1
      IpProtocol: tcp
      FromPort: '22'
      ToPort: '22'
      CidrIp: 0.0.0.0/0
  egress1:
    Type: 'AWS::EC2::SecurityGroupEgress'
    Properties:
      GroupId: !Ref sg1
      IpProtocol: '-1'
      CidrIp: 0.0.0.0/0
Description: test template
